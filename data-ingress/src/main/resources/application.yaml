spring:
  flyway:
    user: postgres
    password: testme
    url: jdbc:postgresql://localhost:5432/stream_db
  datasource:
    url: jdbc:postgresql://localhost:5432/stream_db?stringtype=unspecified
    username: postgres
    password: testme
  threads:
    virtual:
      enabled: true
---
spring:
  kafka:
    producer:
      properties:
        key.serializer: org.apache.kafka.common.serialization.StringSerializer
        value.serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
        value.subject.name.strategy: io.confluent.kafka.serializers.subject.RecordNameStrategy
        retries: 3
        acks: -1
    consumer:
      properties:
        key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value.deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
        value.subject.name.strategy: io.confluent.kafka.serializers.subject.RecordNameStrategy
    properties:
      bootstrap.servers: ${KAFKA_BOOTSTRAP_SERVERS:host.docker.internal:9092}
      schema.registry.url: ${KAFKA_SCHEMA_REGISTRY_URL:http://host.docker.internal:8081}
      auto.register.schemas: true
      processing.guarantee: exactly_once_v2
      state.dir: /tmp/kafka-streams
  cloud:
    function:
      definition: sinkConsumerStagePayments;sinkConsumerPaymentFacts
    stream:
      kafka:
        streams:
          binder:
            auto-create-topics: true
            configuration:
              default:
                key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value.serde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
            functions:
              sinkConsumerStagePayments:
                application-id: consumer-payments-payment_events-dw_staging-v1.1
              sinkConsumerPaymentFacts:
                application-id: consumer-payments-payment_events-dw_facts-v1.3

      bindings:
        # Sink Processor
        sinkConsumerStagePayments-in-0:
          destination: payment-events
          content-type: application/*+avro
          consumer:
            use-native-decoding: true
            concurrency: 2

        sinkConsumerPaymentFacts-in-0:
          destination: payment-events
          content-type: application/*+avro
          consumer:
            use-native-decoding: true
            concurrency: 2

logging:
  level:
    root: WARN
    org.apache: ERROR
    zip.meetup: INFO

server:
  port: 8087
